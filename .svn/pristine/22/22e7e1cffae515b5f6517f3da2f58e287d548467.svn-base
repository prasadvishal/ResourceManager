package com.mindfiresolutions.resourcemanager.CommonAdminUser;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.mindfiresolutions.resourcemanager.R;
import com.mindfiresolutions.resourcemanager.launcherPackage.SignUpActivity;
import com.mindfiresolutions.resourcemanager.model.ChangePasswordSetter;
import com.mindfiresolutions.resourcemanager.model.ResponseGetterBase;
import com.mindfiresolutions.resourcemanager.user.userHome.HomeActivity;
import com.mindfiresolutions.resourcemanager.utility.CallAPIInterface;
import com.mindfiresolutions.resourcemanager.utility.LoggerUtility;
import com.mindfiresolutions.resourcemanager.utility.ServiceGenerator;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

import static com.mindfiresolutions.resourcemanager.utility.APIurls.LOGIN_REQUEST_HEADER_VALUE;
import static com.mindfiresolutions.resourcemanager.utility.HttpCodes.BAD_REQUEST;
import static com.mindfiresolutions.resourcemanager.utility.HttpCodes.OK;
import static com.mindfiresolutions.resourcemanager.utility.UserPreferences.NAMEKEY;
import static com.mindfiresolutions.resourcemanager.utility.UserPreferences.PASSWORDKEY;
import static com.mindfiresolutions.resourcemanager.utility.UserPreferences.USERPREFERENCES;

/**
 * Created By: Vishal on: 3/30/2017
 * Last modified on: 4/01/2017
 */

public class ChangePasswordActivity extends AppCompatActivity {
    String TAG = getClass().getName();
    EditText mOldPassword,mNewPassword,mCnfrmNewPassword;
    Button mChngPswd;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_change_password);
        mOldPassword = (EditText)findViewById(R.id.ChgPwd_oldpswd);
        mNewPassword = (EditText)findViewById(R.id.ChgPwd_newpswd);
        mCnfrmNewPassword = (EditText)findViewById(R.id.ChgPwd_cnfrmpswd);
        mChngPswd = (Button)findViewById(R.id.ChgPwd_Button);


        mChngPswd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                SharedPreferences sharedPreferences = getSharedPreferences(USERPREFERENCES, Context.MODE_PRIVATE);
                //final SharedPreferences.Editor EDITOR = sharedPreferences.edit();
                final String userNameInSharedPreference = sharedPreferences.getString(NAMEKEY, "");
                final String passwordInSharedPreference = sharedPreferences.getString(PASSWORDKEY, "");
                ChangePasswordSetter changePasswordSetter = new ChangePasswordSetter();
                changePasswordSetter.setUserName(userNameInSharedPreference);
                if(mOldPassword.getText().toString().equals(passwordInSharedPreference))
                {
                    changePasswordSetter.setPassword(mOldPassword.getText().toString());
                }
                else
                {
                    mOldPassword.setError(getString(R.string.old_password_mismatch));
                    mOldPassword.requestFocus();
                    return;
                }
                if(!mNewPassword.getText().toString().isEmpty() || !mCnfrmNewPassword.getText().toString().isEmpty()||mNewPassword.getText().toString().length()<4)
                if(mNewPassword.getText().toString().equals(mCnfrmNewPassword.getText().toString())) {
                    changePasswordSetter.setNewPassword(mNewPassword.getText().toString());
                    final ProgressDialog progressDialog = new ProgressDialog(ChangePasswordActivity.this);
                    progressDialog.setMessage(getString(R.string.loading));
                    progressDialog.show();
                    CallAPIInterface callAPIInterface = ServiceGenerator.createService(CallAPIInterface.class);
                    LoggerUtility.makeLog(TAG, "Retrofit object created");
                    Call<ResponseGetterBase> call = callAPIInterface.getResponse(LOGIN_REQUEST_HEADER_VALUE, changePasswordSetter);
                    LoggerUtility.makeLog(TAG, "response in call object");
                    call.enqueue(new Callback<ResponseGetterBase>() {
                        @Override
                        public void onResponse(Call<ResponseGetterBase> call, Response<ResponseGetterBase> response) {
                            //response's body
                            LoggerUtility.makeLog(TAG, "Response body");


                            if (response.body().getCode() == OK) {
                                progressDialog.dismiss();
                                LoggerUtility.makeShortToast(getApplicationContext(), getString(R.string.successful_password_change));
                                Intent i = new Intent(getApplicationContext(), HomeActivity.class);
                                startActivity(i);
                                LoggerUtility.makeLog(TAG, "Password Change Sucessfully.");
                            }
                            if (response.body().getCode() == BAD_REQUEST) {
                                progressDialog.dismiss();
                                LoggerUtility.makeShortToast(getApplicationContext(), "Invalid ResponseGetterBase");
                            }

                        }

                        @Override
                        public void onFailure(Call<ResponseGetterBase> call, Throwable t) {
                            LoggerUtility.makeLog(TAG, "Error requesting API");
                            progressDialog.dismiss();
                            t.printStackTrace();

                        }
                    });
                }
                else
                {
                    mCnfrmNewPassword.setError(getString(R.string.error_cnfrm_password_mismatch));
                    mCnfrmNewPassword.requestFocus();
                }
                else
                {
                    LoggerUtility.makeShortToast(getApplicationContext(),getString(R.string.prompt_empty_password_fields));
                }

            }
        });
    }
}
