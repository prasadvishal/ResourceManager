package com.mindfiresolutions.resourcemanager;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.DefaultItemAnimator;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;
import android.view.View;

import java.util.ArrayList;
import java.util.List;


/**
 * Created By: Vishal on: 3/10/2017
 * Last modified on: 3/21/2017
 */
public class HomeActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    private List<Resources> mResourceList;
    private ResourceAdapter mResourceAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        //created by shivangi

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);


        ActionBar ab = getSupportActionBar();
        //check for Actionbar if present then set tittle
        if(ab != null && ab.isShowing())
        {

            ab.setTitle("Resource Manager");
            ab.setSubtitle("Home");
        }

        //initialize list of resources. Here resources are another class
        mResourceList = new ArrayList<>();
        RecyclerView mRecyclerView;

        //recycler-view for better memory managment.
        mRecyclerView = (RecyclerView) findViewById(R.id.recycler_view);
        mResourceAdapter = new ResourceAdapter();
        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(getApplicationContext());
        mRecyclerView.setLayoutManager(mLayoutManager);
        mRecyclerView.setItemAnimator(new DefaultItemAnimator());
        //item docoration to introduce divider between lines
        mRecyclerView.addItemDecoration(new RecyclerItemDecorator(this));
        mRecyclerView.setAdapter(mResourceAdapter);

        mResourceAdapter.prepareResourceData();

        LoggerUtility.makeLog(getApplicationContext(), "recycler view created ");


        //floating button to add resources
        FloatingActionButton addFabNewRequest = (FloatingActionButton) findViewById(R.id.fab);
        addFabNewRequest.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent i = new Intent(view.getContext(), NewRequestActivity.class);
                startActivity(i);
            }
        });

        LoggerUtility.makeLog(getApplicationContext(), "Floating action created");

        //drawer toggle
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        //to restore drawer state
        toggle.syncState();

        LoggerUtility.makeLog(getApplicationContext(), "drawer toggle");


        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        LoggerUtility.makeLog(this, "Navigation view inflated");

    }

    @Override
    public void onBackPressed() {
        LoggerUtility.makeLog(this, "Back is pressed");
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }


    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        //created by vishal

        LoggerUtility.makeLog(this, "Drawer open functionality");
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_editProfile) {
            Intent i = new Intent(getApplicationContext(), EditUserProfile.class);
            startActivity(i);
        } else if (id == R.id.nav_logout) {

            Intent i = new Intent(getApplicationContext(), LoginActivity.class);
            startActivity(i);
            // Handle the logout action


        } else if (id == R.id.nav_home) {
            // Handle the remove resource action


        } else if (id == R.id.nav_addResource) {
            //handle the add resource action
            Intent i = new Intent(getApplicationContext(), NewRequestActivity.class);
            startActivity(i);

        }

        //gravity is standard constants and tools for placing an object in large container

        LoggerUtility.makeLog(this, "drawer closed after option is selected");
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }


}
