package com.mindfiresolutions.resourcemanager.admin;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListAdapter;
import android.widget.ListView;

import com.mindfiresolutions.resourcemanager.R;
import com.mindfiresolutions.resourcemanager.model.HardwareSummaryCountWithResponse;
import com.mindfiresolutions.resourcemanager.model.ViewHardwareSummary;
import com.mindfiresolutions.resourcemanager.resource.MultiColorListViewAdapter;
import com.mindfiresolutions.resourcemanager.utility.AlarmTokenCleanerReceiver;
import com.mindfiresolutions.resourcemanager.utility.CallAPIInterface;
import com.mindfiresolutions.resourcemanager.utility.CheckForExpiry;
import com.mindfiresolutions.resourcemanager.utility.LoggerUtility;
import com.mindfiresolutions.resourcemanager.utility.ServiceGenerator;
import com.mindfiresolutions.resourcemanager.utility.SharedPref;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

import static com.mindfiresolutions.resourcemanager.utility.APIurls.LOGIN_REQUEST_HEADER_VALUE;
import static com.mindfiresolutions.resourcemanager.utility.HttpCodes.OK;
import static com.mindfiresolutions.resourcemanager.utility.KeyValueConstants.COUNT;
import static com.mindfiresolutions.resourcemanager.utility.KeyValueConstants.HARDWARE_TYPE;
import static com.mindfiresolutions.resourcemanager.utility.KeyValueConstants.HARDWARE_TYPE_ID;
import static com.mindfiresolutions.resourcemanager.utility.UserPreferences.TOKEN;

public class AdminViewHardwareSummaryActivity extends AppCompatActivity implements AdapterView.OnItemClickListener{
    private ListView mListView;
    private ArrayList<HashMap<String,String>> mHardwareList;
    private static String TAG = AdminViewHardwareSummaryActivity.class.getSimpleName();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_admin_view_resource_summary);
        initViews();
        callHardwareSummary();
        mHardwareList = new ArrayList<>();
    }

    private void callHardwareSummary() {
        // final String token = SharedPref.getSharedPreferences(this, TOKEN);
        String token = CheckForExpiry.checkForToken(this);
        if(token==null) return;

        final ProgressDialog progressDialog = new ProgressDialog(AdminViewHardwareSummaryActivity.this);
        progressDialog.setMessage(getString(R.string.loading));
        progressDialog.show();
        progressDialog.setCancelable(false);
        progressDialog.setCanceledOnTouchOutside(false);

        CallAPIInterface callAPIInterface = ServiceGenerator.createService(CallAPIInterface.class);
        LoggerUtility.makeLog(TAG, "Retrofit object created");
        Call<HardwareSummaryCountWithResponse> call = callAPIInterface.getHardwareSummaryCount(LOGIN_REQUEST_HEADER_VALUE, token);
        LoggerUtility.makeLog(TAG, "response in call object");
        call.enqueue(new Callback<HardwareSummaryCountWithResponse>() {
                         @Override
                         public void onResponse(Call<HardwareSummaryCountWithResponse> call, Response<HardwareSummaryCountWithResponse> response) {
                             //response's body
                             LoggerUtility.makeLog(TAG, "Response body");
                             progressDialog.dismiss();
                             try {
                                 if (response.body().getResponse().getCode() == OK) {
                                     LoggerUtility.ToastGeneratorShort(getApplicationContext(), response.body().getResponse().getMessage());
                                     List<ViewHardwareSummary> viewHardwareSummaryList;
                                     viewHardwareSummaryList = response.body().getHardwareCountSummary();
                                     for(int i=0;i<viewHardwareSummaryList.size();i++){
                                         HashMap<String, String> hardwareListHash= new HashMap<>();
                                         hardwareListHash.put(HARDWARE_TYPE,response.body().getHardwareCountSummary().get(i).getHardwareType());
                                         hardwareListHash.put(COUNT,response.body().getHardwareCountSummary().get(i).getCount().toString());
                                         hardwareListHash.put(HARDWARE_TYPE_ID, response.body().getHardwareCountSummary().get(i).getTypeId().toString());
                                         mHardwareList.add(hardwareListHash);
                                     }
                                     ListAdapter adapter = new MultiColorListViewAdapter(AdminViewHardwareSummaryActivity.this, mHardwareList, R.layout.list_item_available_hardware_by_type,
                                             new String[]{HARDWARE_TYPE, COUNT}, new int[]{R.id.resource_name, R.id.resource_brand});
                                     mListView.setAdapter(adapter);
                                     LoggerUtility.makeLog(TAG, "after array adapter");


                                 }
                             } catch (Exception e) {
                                 LoggerUtility.makeLongToast(getApplicationContext(), getString(R.string.error_requesting_api));
                             }
                         }

                         @Override
                         public void onFailure(Call<HardwareSummaryCountWithResponse> call, Throwable t) {
                             LoggerUtility.makeLog(TAG, "Error requesting API");
                             progressDialog.dismiss();
                             LoggerUtility.makeLongToast(getApplicationContext(), getString(R.string.server_error));

                         }
                     });
    }
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            Intent i = new Intent(AdminViewHardwareSummaryActivity.this,HardwareTypeSummary.class);
            i.putExtra(HARDWARE_TYPE_ID,Integer.parseInt(mHardwareList.get(position).get(HARDWARE_TYPE_ID)));
            i.putExtra(HARDWARE_TYPE,mHardwareList.get(position).get(HARDWARE_TYPE));
            startActivity(i);
        }




    private void initViews() {
        mListView = (ListView) findViewById(R.id.admin_resource_list);
        mListView.setOnItemClickListener(this);
    }
}
